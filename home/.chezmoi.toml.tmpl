{{- /* Setup script adapted from https://github.com/felipecrs/dotfiles */ -}}

{{- $full_name := "Mike Greiling" -}}
{{- $email := "mike@pixelcog.com" -}}

{{- $chezmoiForce := or (has "--force" .chezmoi.args) (has "--force=true" .chezmoi.args) -}}
{{- $interactive := and stdinIsATTY (not $chezmoiForce) -}}
{{- $headless := or (env "SSH_CLIENT" | not | not) (not (or (env "DISPLAY") (env "WAYLAND_DISPLAY"))) -}}

{{- if hasKey . "full_name" -}}
{{-   $full_name = .full_name -}}
{{- end -}}
{{- if $interactive -}}
{{-   range $i := until 99 -}}
{{-     $question := "‚ùî What is your full name" -}}
{{-     $answer := "" -}}
{{-     if $full_name -}}
{{-       $answer = promptString $question $full_name -}}
{{-     else -}}
{{-       $answer = promptString $question -}}
{{-     end -}}
{{-     if regexMatch "^[A-Z][-' a-zA-Z]+$" $answer -}}
{{-       $full_name = $answer -}}
{{-       writeToStdout (printf "‚úÖ Name set as '%s'\n" $full_name) -}}
{{-       break -}}
{{-     end -}}
{{-     writeToStdout (printf "‚ùå '%s' is an invalid name\n" $answer) -}}
{{-     if eq $i 98 -}}
{{-       writeToStdout "‚ùå ERROR: maximum tries exceeded\n" -}}
{{-       exit 1 -}}
{{-     end -}}
{{-   end -}}
{{- end -}}

{{- if hasKey . "email" -}}
{{-   $email = .email -}}
{{- end -}}
{{- if $interactive -}}
{{-   range $i := until 99 -}}
{{-     $question := "‚ùî What is your email" -}}
{{-     $answer := "" -}}
{{-     if $email -}}
{{-       $answer = promptString $question $email -}}
{{-     else -}}
{{-       $answer = promptString $question -}}
{{-     end -}}
{{-     $answer = lower $answer -}}
{{-     if regexMatch "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$" $answer -}}
{{-       $email = $answer -}}
{{-       writeToStdout (printf "‚úÖ Email set as '%s'\n" $email) -}}
{{-       break -}}
{{-     end -}}
{{-     writeToStdout (printf "‚ùå '%s' is an invalid email\n" $answer) -}}
{{-     if eq $i 98 -}}
{{-       writeToStdout "‚ùå ERROR: maximum tries exceeded\n" -}}
{{-       exit 1 -}}
{{-     end -}}
{{-   end -}}
{{- end -}}

{{- if $interactive -}}
{{-   writeToStdout "\nüí° Tip: you can always make chezmoi ask this again by running `chezmoi init` without `--force`.\n" -}}
{{- end -}}

{{- /* This retains the value passed with --source on chezmoi init, which is used in the ../install.sh script */ -}}
sourceDir = {{ .chezmoi.workingTree | quote }}

[hooks.read-source-state.pre]
  command = "{{ .chezmoi.sourceDir }}/.chezmoihooks/pre-source-state.sh"

verbose = true

encryption = "age"
[age]
  identity = "~/.config/chezmoi/key.txt"
  recipient = "age1j78rq7y3x5hx3x7lra4p44jkfzsme3v3vnhj6t9cpf8dywwwaeksqfgtx4"

[diff]
  exclude = ["scripts"]

[status]
  exclude = ["always"]

[data]
  is_headless = {{ $headless }}
  full_name = {{ $full_name | quote }}
  email = {{ $email | quote }}
