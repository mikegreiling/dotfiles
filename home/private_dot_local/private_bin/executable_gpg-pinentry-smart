#!/bin/bash

# Smart pinentry script for GPG that automatically selects the appropriate
# pinentry interface based on the calling environment:
#
# - Claude Code sessions: Uses pinentry-mac (GUI with macOS keychain integration)
# - All other contexts: Uses pinentry-curses (terminal-based prompts)
#
# This works by checking the PINENTRY_USER_DATA environment variable, which
# Claude Code automatically sets to "claude-code" via its settings.json configuration.
# GPG passes environment variables from the calling process to pinentry scripts,
# allowing us to detect the originating context reliably.
#
# Setup:
# 1. Claude Code settings (~/.claude/settings.json) contains:
#    "env": { "PINENTRY_USER_DATA": "claude-code" }
# 2. GPG agent config (~/.gnupg/gpg-agent.conf) contains:
#    pinentry-program /path/to/this/script

# Simple function to check if running in Claude Code environment
is_claude_code() {
    [ "$PINENTRY_USER_DATA" = "claude-code" ]
}

# Select appropriate pinentry program based on environment
if is_claude_code; then
    # Claude Code environment: Use GUI pinentry with macOS keychain
    if command -v pinentry-mac >/dev/null 2>&1; then
        exec pinentry-mac "$@"
    else
        echo "Error: pinentry-mac is not installed. Install it with: brew install pinentry-mac" >&2
        exit 1
    fi
else
    # All other environments: Use terminal-based pinentry
    exec /opt/homebrew/bin/pinentry-curses "$@"
fi