#!/usr/bin/env bash

# This file contains my preferred macOS settings. It is intended to be run on a
# fresh macOS installation. It should be idempotent, so there is no harm in
# running it multiple times.
#
# Verified compatibility with macOS 14 (Sonoma). Some settings may only apply to
# older versions of macOS, and I do not vet all of these on every OS update.
# However nothing has broken yet.
#
# The contents are primarily cherry-picked from Mathias Bynens macos defaults:
# https://mths.be/macos (last updated 2020-10-12)
#
# Additional lines borrowed/inspired from:
# https://git.herrbischoff.com/awesome-macos-command-line/about/ (accessed 4/15/24)
# https://github.com/keith/dotfiles/blob/main/osx/defaults.sh (c140816 - 4/1/24)
# https://github.com/paulirish/dotfiles/blob/main/.macos (6742581 - 4/1/24)
#
# When updating this, it can be helpful to look for revisions the community has
# made to Mathias' and others work. You can do a git diff on the original files
# above from the dates logged in these comments to see what has been added,
# modified, or removed.
#
# If you want to figure out what default needs changing, do the following:
#
#   1. `cd /tmp`
#   2. Store current defaults in file: `defaults read > before`
#   3. Make a change to your system.
#   4. Store new defaults in file: `defaults read > after`
#   5. Diff the files: `diff before after`
#
# Explanations for many of the settings can be found at:
# https://macos-defaults.com / https://github.com/yannbertrand/macos-defaults
#
# NOTE: Some of these settings cannot be applied without first going into
# System Preferences → Privacy & Security → Full Disk Access and toggling full
# disk access on for the Terminal app.

echo ""
echo "-----------------------------------------------------------"
echo "  Configuring macOS system settings..."
echo "-----------------------------------------------------------"
echo ""

{{- /* Add modTime of trigger file to comment to force chezmoi to re-execute */ -}}
{{- $trigger_path := (joinPath .chezmoi.homeDir ".config/chezmoi/rerun-macos-defaults") -}}
{{- $trigger_lstat := ($trigger_path | lstat) }}
{{ if $trigger_lstat }}{{ $trigger_lstat.modTime | quote | comment "# " }}{{ end }}

make_chezmoi_rerun_this_script() {
	touch {{ $trigger_path | quote }}
}

# Check if the process has Full Disk Access
process_has_full_disk_access=$(plutil -lint /Library/Preferences/com.apple.TimeMachine.plist >/dev/null && echo true || echo false)

if ! $process_has_full_disk_access; then
	echo "--- WARNING: -------------------------------------------------------------"
	echo "Several macOS system config changes require Full Disk Access to apply."
	echo ""
	echo "Please open System Preferences → Privacy & Security → Full Disk Access"
	echo "and toggle it on for the Terminal app (or your TTY application of choice)."
	echo "You will need to restart the terminal and re-run 'chezmoi apply' after"
	echo "doing this."
	echo ""
	echo "If you are running chezmoi for the first time, you should allow it to"
	echo "complete before quitting the terminal to re-run this script."
	echo "--------------------------------------------------------------------------"
	echo ""
	read -p "Skip settings which require Full Disk Access? [y/N] " -n 1;
	echo "";
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		echo "Continuing to apply settings which do not require Full Disk Access..."
	else
		make_chezmoi_rerun_this_script
		echo "Please enable Full Disk Access and re-run 'chezmoi apply'."
		echo "Continuing on without applying macOS settings..."
		exit 0
	fi;
fi;

# Ask for the administrator password upfront
sudo -v -p 'Enter password for %p:'

# Keep-alive: update existing `sudo` time stamp until this script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Display commands in terminal as they are executed, just in case we run into
# an issue and want to know what command was being executed at the time.
set -x

###############################################################################
# General UI/UX                                                               #
###############################################################################

# Set sidebar icon size to medium
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

# Always show scrollbars
# defaults write NSGlobalDomain AppleShowScrollBars -string "Always"
# Possible values: `WhenScrolling`, `Automatic` and `Always`

# Disable the over-the-top focus ring animation
defaults write NSGlobalDomain NSUseAnimatedFocusRing -bool false

# Adjust toolbar title rollover delay (back to pre-macOS 11 behavior)
defaults write NSGlobalDomain NSToolbarTitleViewRolloverDelay -float 0

# Disable smooth scrolling
# (Uncomment if you’re on an older Mac that messes up the animation)
# defaults write NSGlobalDomain NSScrollAnimationEnabled -bool false

# Increase window resize speed for Cocoa applications
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Automatically quit printer app once the print jobs complete
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Remove duplicates in the “Open With” menu (also see `lscleanup` alias)
# /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user

# Display ASCII control characters using caret notation in standard text views
# Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

# Disable Resume system-wide
# defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false

# Disable automatic termination of inactive apps
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

# Disable the crash reporter
defaults write com.apple.CrashReporter DialogType -string "none"

# Set Help Viewer windows to non-floating mode
defaults write com.apple.helpviewer DevMode -bool true

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# Disable Notification Center and remove the menu bar icon
# launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null

# Disable automatic capitalization as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Disable automatic period substitution as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Enable "Dark Mode"
defaults write NSGlobalDomain AppleInterfaceStyle -string "Dark"

# Disable "click to wallpaper to show desktop items"
defaults write com.apple.WindowManager EnableStandardClickToShowDesktop -bool false

# Disable Siri
defaults write com.apple.Siri StatusMenuVisible -bool false
defaults write com.apple.assistant.support "Assistant Enabled" -bool false

# Alert Dialog - Switch to Legacy Horizontal Layout
defaults write -g NSAlertMetricsGatheringEnabled -bool false

###############################################################################
# Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
###############################################################################

# Disable “natural” (Lion-style) scrolling
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

# Increase sound quality for Bluetooth headphones/headsets
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

# Trackpad: swipe between spaces with four fingers
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadFourFingerHorizSwipeGesture -int 2

# Trackpad: disable two-finger swipe between pages
defaults write NSGlobalDomain AppleEnableSwipeNavigateWithScrolls -bool false

# Trackpad: swipe between pages with three fingers
defaults write -g com.apple.trackpad.threeFingerHorizSwipeGesture -int 1
defaults -currentHost write -g com.apple.trackpad.threeFingerHorizSwipeGesture -int 1
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -int 1
defaults -currentHost write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -int 1

# Trackpad: disable force touch and enable tap with three fingers for lookup
defaults write com.apple.AppleMultitouchTrackpad ForceSuppressed -bool true
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerTapGesture -integer 2

# Enable full keyboard access for all controls
# (e.g. enable Tab in modal dialogs)
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

if $process_has_full_disk_access; then
	# Use scroll gesture with the Ctrl (^) modifier key to zoom
	defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
	defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
	# Follow the keyboard focus while zoomed in
	defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true
fi

# Disable press-and-hold for keys in favor of key repeat
# (I've opted to do this per-app instead)
# defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Set a blazingly fast keyboard repeat rate
# Default KeyRepeat is 6, default InitialKeyRepeat is 25
defaults write NSGlobalDomain KeyRepeat -int 2
defaults write NSGlobalDomain InitialKeyRepeat -int 15

# Automatically illuminate built-in MacBook keyboard in low light
defaults write com.apple.BezelServices kDim -bool true

# Turn off keyboard illumination when computer is not used for 5 minutes
defaults write com.apple.BezelServices kDimTime -int 300

###############################################################################
# Screen                                                                      #
###############################################################################

# Require password immediately after sleep or screen saver begins
# These no longer work as of macOS 10.12 Sierra and one can alternatively use
# `sysadminctl` to achieve something similar.
# See https://github.com/mathiasbynens/dotfiles/issues/922#issuecomment-1322698371
# TODO: Fix these settings
# defaults write com.apple.screensaver askForPassword -int 1
# defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the desktop
defaults write com.apple.screencapture location -string "${HOME}/Desktop"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

# Disable shadow in screenshots
defaults write com.apple.screencapture disable-shadow -bool true

# Enable subpixel font rendering on non-Apple LCDs
# Reference: https://github.com/kevinSuttle/macOS-Defaults/issues/17#issuecomment-266633501
defaults write NSGlobalDomain AppleFontSmoothing -int 1

# Enable HiDPI display modes (requires restart)
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

###############################################################################
# Finder                                                                      #
###############################################################################

# Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons
defaults write com.apple.finder QuitMenuItem -bool true

# Finder: disable window animations and Get Info animations
defaults write com.apple.finder DisableAllAnimations -bool true

# Set home as the default location for new Finder windows
# For other paths, use `PfLo` and `file:///full/path/here/`
defaults write com.apple.finder NewWindowTarget -string "PfHm"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"

# Show icons for hard drives, servers, and removable media on the desktop
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# Finder: show hidden files by default
# defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
# defaults write com.apple.finder ShowPathbar -bool true

# Display full POSIX path as Finder window title
# defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# Keep folders on top when sorting by name
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Enable spring loading for directories
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

# Remove the spring loading delay for directories
defaults write NSGlobalDomain com.apple.springing.delay -float 0

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Disable disk image verification
# defaults write com.apple.frameworks.diskimages skip-verify -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

# Automatically open a new Finder window when a volume is mounted
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

# Show item info near icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

# Show item info to the right of the icons on the desktop
/usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

# Enable snap-to-grid for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

# Increase grid spacing for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

# Increase the size of icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist

# Use list view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `clmv`, `glyv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# Set the finder window toolbar to only have back/forward buttons
/usr/libexec/PlistBuddy -c "Delete :NSToolbar\\ Configuration\\ Browser:TB\\ Item\\ Identifiers" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Add :NSToolbar\\ Configuration\\ Browser:TB\\ Item\\ Identifiers array" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Add :NSToolbar\\ Configuration\\ Browser:TB\\ Item\\ Identifiers:0 string com.apple.finder.BACK" ~/Library/Preferences/com.apple.finder.plist

# Disable the warning before emptying the Trash
# defaults write com.apple.finder WarnOnEmptyTrash -bool false

# Enable AirDrop over Ethernet and on unsupported Macs running Lion
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

# Show the ~/Library folder
chflags nohidden ~/Library
if xattr ~/Library | grep -q "com.apple.FinderInfo"; then
	xattr -d com.apple.FinderInfo ~/Library
fi

# Show the /Volumes folder
sudo chflags nohidden /Volumes

# Expand the following File Info panes:
# “General”, “Open with”, and “Sharing & Permissions”
defaults write com.apple.finder FXInfoPanesExpanded -dict \
	General -bool true \
	OpenWith -bool true \
	Privileges -bool true

# Hide cask-created 'opt' directory in Finder
sudo chflags hidden /opt

###############################################################################
# Dock                                                                        #
###############################################################################

# Enable highlight hover effect for the grid view of a stack (Dock)
defaults write com.apple.dock mouse-over-hilite-stack -bool true

# Set the icon size of Dock items to 36 pixels
defaults write com.apple.dock tilesize -int 36

# Enable spring loading for all Dock items
# defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

# Show indicator lights for open applications in the Dock
defaults write com.apple.dock show-process-indicators -bool true

# Wipe all (default) app icons from the Dock
# This is only really useful when setting up a new Mac, or if you don’t use
# the Dock to launch apps.
# defaults write com.apple.dock persistent-apps -array

# Show only open applications in the Dock
# defaults write com.apple.dock static-only -bool true

# Don’t animate opening applications from the Dock
# defaults write com.apple.dock launchanim -bool false

# Speed up Mission Control animations
defaults write com.apple.dock expose-animation-duration -float 0.1

# Don’t group windows by application in Mission Control
# (i.e. use the old Exposé behavior instead)
defaults write com.apple.dock expose-group-by-app -bool false

# Don’t automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

# Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0
# Remove the animation when hiding/showing the Dock
defaults write com.apple.dock autohide-time-modifier -float 0

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool true

# Don’t show recent applications in Dock
# defaults write com.apple.dock show-recents -bool false

# Disable the Launchpad gesture (pinch with thumb and three fingers)
defaults write com.apple.dock showLaunchpadGestureEnabled -int 0

###############################################################################
# Safari & WebKit                                                             #
###############################################################################

# Safari is sandboxed, so changing its settings requires full disk access
if $process_has_full_disk_access; then

	# Privacy: don’t send search queries to Apple
	defaults write -app Safari UniversalSearchEnabled -bool false
	defaults write -app Safari SuppressSearchSuggestions -bool true

	# Press Tab to highlight each item on a web page
	defaults write -app Safari WebKitTabToLinksPreferenceKey -bool true
	defaults write -app Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true

	# Show the full URL in the address bar (note: this still hides the scheme)
	defaults write -app Safari ShowFullURLInSmartSearchField -bool true

	# Set Safari’s home page to `about:blank` for faster loading
	defaults write -app Safari HomePage -string "about:blank"

	# Prevent Safari from opening ‘safe’ files automatically after downloading
	defaults write -app Safari AutoOpenSafeDownloads -bool false

	# Hide Safari’s bookmarks bar by default
	defaults write -app Safari ShowFavoritesBar -bool false

	# Hide Safari’s sidebar in Top Sites
	defaults write -app Safari ShowSidebarInTopSites -bool false

	# Disable Safari’s thumbnail cache for History and Top Sites
	defaults write -app Safari DebugSnapshotsUpdatePolicy -int 2

	# Enable Safari’s debug menu
	defaults write -app Safari IncludeInternalDebugMenu -bool true

	# Make Safari’s search banners default to Contains instead of Starts With
	defaults write -app Safari FindOnPageMatchesWordStartsOnly -bool false

	# Enable the Develop menu and the Web Inspector in Safari
	defaults write com.apple.Safari.SandboxBroker ShowDevelopMenu -bool true
	defaults write -app Safari IncludeDevelopMenu -bool true
	defaults write -app Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
	defaults write -app Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

	# Add a context menu item for showing the Web Inspector in web views
	defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

	# Enable continuous spellchecking
	defaults write -app Safari WebContinuousSpellCheckingEnabled -bool true
	# Disable auto-correct
	defaults write -app Safari WebAutomaticSpellingCorrectionEnabled -bool false

	# Disable AutoFill
	# defaults write -app Safari AutoFillFromAddressBook -bool false
	# defaults write -app Safari AutoFillPasswords -bool false
	# defaults write -app Safari AutoFillCreditCardData -bool false
	# defaults write -app Safari AutoFillMiscellaneousForms -bool false

	# Warn about fraudulent websites
	defaults write -app Safari WarnAboutFraudulentWebsites -bool true

	# Disable plug-ins
	defaults write -app Safari WebKitPluginsEnabled -bool false
	defaults write -app Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool false

	# Disable Java
	defaults write -app Safari WebKitJavaEnabled -bool false
	defaults write -app Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false
	defaults write -app Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles -bool false

	# Enable “Do Not Track”
	defaults write -app Safari SendDoNotTrackHTTPHeader -bool true

	# Update extensions automatically
	defaults write -app Safari InstallExtensionUpdatesAutomatically -bool true

	# Never remove history, this is the constant the UI uses
	defaults write -app Safari HistoryAgeInDaysLimit -int 365000

	# Some additional defaults
	defaults write -app Safari ShowOverlayStatusBar -bool true
	defaults write -app Safari AlwaysRestoreSessionAtLaunch -bool true
	defaults write -app Safari AlwaysShowTabBar -bool true
fi

###############################################################################
# Mail                                                                        #
###############################################################################

# Mail is sandboxed, so changing its settings requires full disk access
if $process_has_full_disk_access; then

	# Disable send and reply animations in Mail.app
	defaults write -app "Mail" DisableReplyAnimations -bool true
	defaults write -app "Mail" DisableSendAnimations -bool true

	# Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
	defaults write -app "Mail" AddressesIncludeNameOnPasteboard -bool false

	# Add the keyboard shortcut ⌘ + = to archive an email in Mail.app
	defaults write -app "Mail" NSUserKeyEquivalents -dict-add "Archive" "@="

	# Sort conversations in descending order
	defaults write -app "Mail" ConversationViewSortDescending -bool true

	# Disable inline attachments (just show the icons)
	# defaults write -app "Mail" DisableInlineAttachmentViewing -bool true

	# Disable automatic spell checking
	defaults write -app "Mail" SpellCheckingBehavior -string "NoSpellCheckingEnabled"
fi

###############################################################################
# Terminal                                                                    #
###############################################################################

# Use a modified version of the Solarized Dark theme by default in Terminal.app
# https://ethanschoonover.com/solarized/
theme_name="Catppuccin Macchiato - JetBrains"

if [[ $(defaults read -app "Terminal" "Default Window Settings") != "$theme_name" ]]; then
	osascript <<EOD

tell application "Terminal"

	local allOpenedWindows
	local initialOpenedWindows
	local windowID
	set themeName to "$theme_name"

	(* Store the IDs of all the open terminal windows. *)
	set initialOpenedWindows to id of every window

	(* Open the custom theme so that it gets added to the list
	   of available terminal themes (note: this will open two
	   additional terminal windows). *)
	do shell script "open './.config/terminal/$theme_name.terminal'"

	(* Wait a little bit to ensure that the custom theme is added. *)
	delay 1

	(* Set the custom theme as the default terminal theme. *)
	set default settings to settings set themeName

	(* Get the IDs of all the currently opened terminal windows. *)
	set allOpenedWindows to id of every window

	repeat with windowID in allOpenedWindows

		(* Close the additional windows that were opened in order
		   to add the custom theme to the list of terminal themes. *)
		if initialOpenedWindows does not contain windowID then
			close (every window whose id is windowID)

		(* Change the theme for the initial opened terminal windows
		   to remove the need to close them in order for the custom
		   theme to be applied. *)
		else
			set current settings of tabs of (every window whose id is windowID) to settings set themeName
		end if

	end repeat

end tell

EOD
fi

# Only use UTF-8 in Terminal.app
defaults write -app "Terminal" StringEncodings -array 4

# Enable “focus follows mouse” for Terminal.app and all X11 apps
# i.e. hover over a window and start typing in it without clicking first
# defaults write -app "Terminal" FocusFollowsMouse -bool true
# defaults write org.x.X11 wm_ffm -bool true

# Enable Secure Keyboard Entry in Terminal.app
# See: https://security.stackexchange.com/a/47786/8918
# Disabling this for now. It breaks the open command by preventing it from
# changing focus to the newly opened window.
# see: https://apple.stackexchange.com/a/431084
# defaults write -app "Terminal" SecureKeyboardEntry -bool true

# Disable the annoying line marks
defaults write -app "Terminal" ShowLineMarks -int 0

###############################################################################
# Time Machine                                                                #
###############################################################################

# Prevent Time Machine from prompting to use new hard drives as backup volume
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

# Disable local Time Machine backups
# hash tmutil &> /dev/null && sudo tmutil disablelocal

###############################################################################
# Activity Monitor                                                            #
###############################################################################

# Show the main window when launching Activity Monitor
defaults write -app "Activity Monitor" OpenMainWindow -bool true

# Visualize CPU usage in the Activity Monitor Dock icon
defaults write -app "Activity Monitor" IconType -int 5

# Show all processes in Activity Monitor
defaults write -app "Activity Monitor" ShowCategory -int 0

# Sort Activity Monitor results by CPU usage
defaults write -app "Activity Monitor" SortColumn -string "CPUUsage"
defaults write -app "Activity Monitor" SortDirection -int 0

###############################################################################
# TextEdit                                                                    #
###############################################################################

# Use plain text mode for new TextEdit documents
defaults write -app "TextEdit" RichText -int 0

# Open and save files as UTF-8 in TextEdit
defaults write -app "TextEdit" PlainTextEncoding -int 4
defaults write -app "TextEdit" PlainTextEncodingForWrite -int 4

###############################################################################
# Disk Utility                                                                #
###############################################################################

# Enable the debug menu in Disk Utility
defaults write -app "Disk Utility" DUDebugMenuEnabled -bool true
defaults write -app "Disk Utility" advanced-image-options -bool true

# View -> Show All Devices
defaults write -app "Disk Utility" SidebarShowAllDevices -bool true

###############################################################################
# Mac App Store                                                               #
###############################################################################

# Enable the WebKit Developer Tools in the Mac App Store
defaults write com.apple.appstore WebKitDeveloperExtras -bool true

# Enable Debug Menu in the Mac App Store
defaults write com.apple.appstore ShowDebugMenu -bool true

# Enable the automatic update check
defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

# Check for software updates daily, not just once per week
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# Download newly available updates in background
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

# Install System data files & security updates
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

# Automatically download apps purchased on other Macs
# defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1

# Turn on app auto-update
defaults write com.apple.commerce AutoUpdate -bool true

# Allow the App Store to reboot machine on macOS updates
# defaults write com.apple.commerce AutoUpdateRestartRequired -bool true

###############################################################################
# Photos                                                                      #
###############################################################################

# Prevent Photos from opening automatically when devices are plugged in
defaults -currentHost write -app "Image Capture" disableHotPlug -bool true

###############################################################################
# Messages                                                                    #
###############################################################################

# Disable automatic emoji substitution (i.e. use plain text smileys)
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticEmojiSubstitutionEnablediMessage" -bool false

# Disable smart quotes as it’s annoying for messages that contain code
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false

# Disable continuous spell checking
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false

###############################################################################
# Kill affected applications                                                  #
###############################################################################

# Stop echoing commands before execution
set +x

# Activate some of the above settings without a logout
/System/Library/PrivateFrameworks/SystemAdministration.framework/Resources/activateSettings -u

echo ""
echo "Finished configuring macOS system preferences."

function killApps() {
  for app in "cfprefsd" "Dock" "Finder" "Mail" "SystemUIServer" "WindowManager"; do
    killall "${app}" > /dev/null 2>&1
  done
}

# If we're running in an interactive shell, ask the user if they want to reload
if [ -t 0 -a -t 1 ]; then
	read -p "Would you like to automatically reload the effected apps? [y/N] " -n 1;
	echo "";
	if [[ $REPLY =~ ^[Yy]$ ]]; then
		killApps;
	fi;
else
	killApps;
fi;

echo "You may still need to log out and log back in before all settings take effect."

exit 0

# vim: filetype=sh